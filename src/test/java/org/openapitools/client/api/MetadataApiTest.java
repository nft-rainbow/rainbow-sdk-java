/*
 * Rainbow-API
 * The responses of the open api in swagger focus on the data field rather than the code and the message fields
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ModelsExposedMetadata;
import org.openapitools.client.model.ModelsExposedMetadataQueryResult;
import org.openapitools.client.model.RainbowErrorsRainbowErrorDetailInfo;
import org.openapitools.client.model.ServicesMetadataDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for MetadataApi
 */
@Ignore
public class MetadataApiTest {

    private final MetadataApi api = new MetadataApi();

    
    /**
     * Create NFT metadata
     *
     * Create NFT metadata by providing the info including name, description and so on
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMetadataTest() throws ApiException {
        String authorization = null;
        ServicesMetadataDto metadataInfo = null;
        ModelsExposedMetadata response = 
        api.createMetadata(authorization, metadataInfo);
        
        // TODO: test validations
    }
    
    /**
     * Query metadata
     *
     * Query the metadata according to metadata_id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMetadatInfoTest() throws ApiException {
        String authorization = null;
        String metadataId = null;
        ModelsExposedMetadata response = 
        api.getMetadatInfo(authorization, metadataId);
        
        // TODO: test validations
    }
    
    /**
     * Obtain metadata list
     *
     * Get the metadata list containing the info of the metadata created in the specified app
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMetadatasTest() throws ApiException {
        String authorization = null;
        String page = null;
        String limit = null;
        ModelsExposedMetadataQueryResult response = 
        api.listMetadatas(authorization, page, limit);
        
        // TODO: test validations
    }
    
}
