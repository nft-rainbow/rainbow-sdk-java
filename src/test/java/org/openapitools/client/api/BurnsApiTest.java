/*
 * Rainbow-API
 * The responses of the open api in swagger focus on the data field rather than the code and the message fields
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ModelsBurnTask;
import org.openapitools.client.model.ModelsBurnTaskQueryResult;
import org.openapitools.client.model.RainbowErrorsRainbowErrorDetailInfo;
import org.openapitools.client.model.ServicesBurnDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for BurnsApi
 */
@Ignore
public class BurnsApiTest {

    private final BurnsApi api = new BurnsApi();

    
    /**
     * Burn NFT
     *
     * Burn NFT by admin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void burnNftTest() throws ApiException {
        String authorization = null;
        ServicesBurnDto burnDto = null;
        ModelsBurnTask response = 
        api.burnNft(authorization, burnDto);
        
        // TODO: test validations
    }
    
    /**
     * Burn NFT detail
     *
     * Get NFT Burn detail info
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBurnDetailTest() throws ApiException {
        String authorization = null;
        Integer id = null;
        ModelsBurnTask response = 
        api.getBurnDetail(authorization, id);
        
        // TODO: test validations
    }
    
    /**
     * Obtain the burned NFTs list
     *
     * Get the NFT burned list information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBurnListTest() throws ApiException {
        String authorization = null;
        ModelsBurnTaskQueryResult response = 
        api.getBurnList(authorization);
        
        // TODO: test validations
    }
    
}
