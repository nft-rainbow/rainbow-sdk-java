/*
 * Rainbow-API
 * The responses of the open api in swagger focus on the data field rather than the code and the message fields
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServicesContractDeployDto
 */
@JsonPropertyOrder({
  ServicesContractDeployDto.JSON_PROPERTY_BASE_URI,
  ServicesContractDeployDto.JSON_PROPERTY_CHAIN,
  ServicesContractDeployDto.JSON_PROPERTY_IS_SPONSOR_FOR_ALL_USER,
  ServicesContractDeployDto.JSON_PROPERTY_NAME,
  ServicesContractDeployDto.JSON_PROPERTY_OWNER_ADDRESS,
  ServicesContractDeployDto.JSON_PROPERTY_ROYALTIES_ADDRESS,
  ServicesContractDeployDto.JSON_PROPERTY_ROYALTIES_BPS,
  ServicesContractDeployDto.JSON_PROPERTY_SYMBOL,
  ServicesContractDeployDto.JSON_PROPERTY_TOKENS_BURNABLE,
  ServicesContractDeployDto.JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_ADMIN,
  ServicesContractDeployDto.JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_USER,
  ServicesContractDeployDto.JSON_PROPERTY_TRANSFER_COOLDOWN_TIME,
  ServicesContractDeployDto.JSON_PROPERTY_TYPE
})
@JsonTypeName("services.ContractDeployDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServicesContractDeployDto {
  public static final String JSON_PROPERTY_BASE_URI = "base_uri";
  private String baseUri;

  /**
   * Gets or Sets chain
   */
  public enum ChainEnum {
    CONFLUX("conflux"),
    
    CONFLUX_TEST("conflux_test");

    private String value;

    ChainEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChainEnum fromValue(String value) {
      for (ChainEnum b : ChainEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHAIN = "chain";
  private ChainEnum chain;

  public static final String JSON_PROPERTY_IS_SPONSOR_FOR_ALL_USER = "is_sponsor_for_all_user";
  private Boolean isSponsorForAllUser;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_OWNER_ADDRESS = "owner_address";
  private String ownerAddress;

  public static final String JSON_PROPERTY_ROYALTIES_ADDRESS = "royalties_address";
  private String royaltiesAddress;

  public static final String JSON_PROPERTY_ROYALTIES_BPS = "royalties_bps";
  private Integer royaltiesBps;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_TOKENS_BURNABLE = "tokens_burnable";
  private Boolean tokensBurnable;

  public static final String JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_ADMIN = "tokens_transferable_by_admin";
  private Boolean tokensTransferableByAdmin;

  public static final String JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_USER = "tokens_transferable_by_user";
  private Boolean tokensTransferableByUser;

  public static final String JSON_PROPERTY_TRANSFER_COOLDOWN_TIME = "transfer_cooldown_time";
  private Integer transferCooldownTime;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ERC721("erc721"),
    
    ERC1155("erc1155");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public ServicesContractDeployDto() {
  }

  public ServicesContractDeployDto baseUri(String baseUri) {
    
    this.baseUri = baseUri;
    return this;
  }

   /**
   * Get baseUri
   * @return baseUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BASE_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBaseUri() {
    return baseUri;
  }


  @JsonProperty(JSON_PROPERTY_BASE_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseUri(String baseUri) {
    this.baseUri = baseUri;
  }


  public ServicesContractDeployDto chain(ChainEnum chain) {
    
    this.chain = chain;
    return this;
  }

   /**
   * Get chain
   * @return chain
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CHAIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ChainEnum getChain() {
    return chain;
  }


  @JsonProperty(JSON_PROPERTY_CHAIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChain(ChainEnum chain) {
    this.chain = chain;
  }


  public ServicesContractDeployDto isSponsorForAllUser(Boolean isSponsorForAllUser) {
    
    this.isSponsorForAllUser = isSponsorForAllUser;
    return this;
  }

   /**
   * default: true
   * @return isSponsorForAllUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "default: true")
  @JsonProperty(JSON_PROPERTY_IS_SPONSOR_FOR_ALL_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSponsorForAllUser() {
    return isSponsorForAllUser;
  }


  @JsonProperty(JSON_PROPERTY_IS_SPONSOR_FOR_ALL_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSponsorForAllUser(Boolean isSponsorForAllUser) {
    this.isSponsorForAllUser = isSponsorForAllUser;
  }


  public ServicesContractDeployDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ServicesContractDeployDto ownerAddress(String ownerAddress) {
    
    this.ownerAddress = ownerAddress;
    return this;
  }

   /**
   * Get ownerAddress
   * @return ownerAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerAddress() {
    return ownerAddress;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerAddress(String ownerAddress) {
    this.ownerAddress = ownerAddress;
  }


  public ServicesContractDeployDto royaltiesAddress(String royaltiesAddress) {
    
    this.royaltiesAddress = royaltiesAddress;
    return this;
  }

   /**
   * Get royaltiesAddress
   * @return royaltiesAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROYALTIES_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRoyaltiesAddress() {
    return royaltiesAddress;
  }


  @JsonProperty(JSON_PROPERTY_ROYALTIES_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoyaltiesAddress(String royaltiesAddress) {
    this.royaltiesAddress = royaltiesAddress;
  }


  public ServicesContractDeployDto royaltiesBps(Integer royaltiesBps) {
    
    this.royaltiesBps = royaltiesBps;
    return this;
  }

   /**
   * Get royaltiesBps
   * @return royaltiesBps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROYALTIES_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRoyaltiesBps() {
    return royaltiesBps;
  }


  @JsonProperty(JSON_PROPERTY_ROYALTIES_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoyaltiesBps(Integer royaltiesBps) {
    this.royaltiesBps = royaltiesBps;
  }


  public ServicesContractDeployDto symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public ServicesContractDeployDto tokensBurnable(Boolean tokensBurnable) {
    
    this.tokensBurnable = tokensBurnable;
    return this;
  }

   /**
   * Get tokensBurnable
   * @return tokensBurnable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOKENS_BURNABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTokensBurnable() {
    return tokensBurnable;
  }


  @JsonProperty(JSON_PROPERTY_TOKENS_BURNABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokensBurnable(Boolean tokensBurnable) {
    this.tokensBurnable = tokensBurnable;
  }


  public ServicesContractDeployDto tokensTransferableByAdmin(Boolean tokensTransferableByAdmin) {
    
    this.tokensTransferableByAdmin = tokensTransferableByAdmin;
    return this;
  }

   /**
   * Get tokensTransferableByAdmin
   * @return tokensTransferableByAdmin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_ADMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTokensTransferableByAdmin() {
    return tokensTransferableByAdmin;
  }


  @JsonProperty(JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_ADMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokensTransferableByAdmin(Boolean tokensTransferableByAdmin) {
    this.tokensTransferableByAdmin = tokensTransferableByAdmin;
  }


  public ServicesContractDeployDto tokensTransferableByUser(Boolean tokensTransferableByUser) {
    
    this.tokensTransferableByUser = tokensTransferableByUser;
    return this;
  }

   /**
   * Get tokensTransferableByUser
   * @return tokensTransferableByUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTokensTransferableByUser() {
    return tokensTransferableByUser;
  }


  @JsonProperty(JSON_PROPERTY_TOKENS_TRANSFERABLE_BY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokensTransferableByUser(Boolean tokensTransferableByUser) {
    this.tokensTransferableByUser = tokensTransferableByUser;
  }


  public ServicesContractDeployDto transferCooldownTime(Integer transferCooldownTime) {
    
    this.transferCooldownTime = transferCooldownTime;
    return this;
  }

   /**
   * Get transferCooldownTime
   * @return transferCooldownTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSFER_COOLDOWN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransferCooldownTime() {
    return transferCooldownTime;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_COOLDOWN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferCooldownTime(Integer transferCooldownTime) {
    this.transferCooldownTime = transferCooldownTime;
  }


  public ServicesContractDeployDto type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServicesContractDeployDto servicesContractDeployDto = (ServicesContractDeployDto) o;
    return Objects.equals(this.baseUri, servicesContractDeployDto.baseUri) &&
        Objects.equals(this.chain, servicesContractDeployDto.chain) &&
        Objects.equals(this.isSponsorForAllUser, servicesContractDeployDto.isSponsorForAllUser) &&
        Objects.equals(this.name, servicesContractDeployDto.name) &&
        Objects.equals(this.ownerAddress, servicesContractDeployDto.ownerAddress) &&
        Objects.equals(this.royaltiesAddress, servicesContractDeployDto.royaltiesAddress) &&
        Objects.equals(this.royaltiesBps, servicesContractDeployDto.royaltiesBps) &&
        Objects.equals(this.symbol, servicesContractDeployDto.symbol) &&
        Objects.equals(this.tokensBurnable, servicesContractDeployDto.tokensBurnable) &&
        Objects.equals(this.tokensTransferableByAdmin, servicesContractDeployDto.tokensTransferableByAdmin) &&
        Objects.equals(this.tokensTransferableByUser, servicesContractDeployDto.tokensTransferableByUser) &&
        Objects.equals(this.transferCooldownTime, servicesContractDeployDto.transferCooldownTime) &&
        Objects.equals(this.type, servicesContractDeployDto.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseUri, chain, isSponsorForAllUser, name, ownerAddress, royaltiesAddress, royaltiesBps, symbol, tokensBurnable, tokensTransferableByAdmin, tokensTransferableByUser, transferCooldownTime, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServicesContractDeployDto {\n");
    sb.append("    baseUri: ").append(toIndentedString(baseUri)).append("\n");
    sb.append("    chain: ").append(toIndentedString(chain)).append("\n");
    sb.append("    isSponsorForAllUser: ").append(toIndentedString(isSponsorForAllUser)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerAddress: ").append(toIndentedString(ownerAddress)).append("\n");
    sb.append("    royaltiesAddress: ").append(toIndentedString(royaltiesAddress)).append("\n");
    sb.append("    royaltiesBps: ").append(toIndentedString(royaltiesBps)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    tokensBurnable: ").append(toIndentedString(tokensBurnable)).append("\n");
    sb.append("    tokensTransferableByAdmin: ").append(toIndentedString(tokensTransferableByAdmin)).append("\n");
    sb.append("    tokensTransferableByUser: ").append(toIndentedString(tokensTransferableByUser)).append("\n");
    sb.append("    transferCooldownTime: ").append(toIndentedString(transferCooldownTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

