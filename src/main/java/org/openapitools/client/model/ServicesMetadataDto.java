/*
 * Rainbow-API
 * The responses of the open api in swagger focus on the data field rather than the code and the message fields
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ModelsExposedMetadataAttribute;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServicesMetadataDto
 */
@JsonPropertyOrder({
  ServicesMetadataDto.JSON_PROPERTY_ANIMATION_URL,
  ServicesMetadataDto.JSON_PROPERTY_ATTRIBUTES,
  ServicesMetadataDto.JSON_PROPERTY_DESCRIPTION,
  ServicesMetadataDto.JSON_PROPERTY_EXTERNAL_LINK,
  ServicesMetadataDto.JSON_PROPERTY_IMAGE,
  ServicesMetadataDto.JSON_PROPERTY_NAME
})
@JsonTypeName("services.MetadataDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServicesMetadataDto {
  public static final String JSON_PROPERTY_ANIMATION_URL = "animation_url";
  private String animationUrl;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private List<ModelsExposedMetadataAttribute> attributes = null;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EXTERNAL_LINK = "external_link";
  private String externalLink;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private String image;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public ServicesMetadataDto() {
  }

  public ServicesMetadataDto animationUrl(String animationUrl) {
    
    this.animationUrl = animationUrl;
    return this;
  }

   /**
   * Get animationUrl
   * @return animationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ANIMATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnimationUrl() {
    return animationUrl;
  }


  @JsonProperty(JSON_PROPERTY_ANIMATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnimationUrl(String animationUrl) {
    this.animationUrl = animationUrl;
  }


  public ServicesMetadataDto attributes(List<ModelsExposedMetadataAttribute> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ServicesMetadataDto addAttributesItem(ModelsExposedMetadataAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ModelsExposedMetadataAttribute> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(List<ModelsExposedMetadataAttribute> attributes) {
    this.attributes = attributes;
  }


  public ServicesMetadataDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ServicesMetadataDto externalLink(String externalLink) {
    
    this.externalLink = externalLink;
    return this;
  }

   /**
   * Get externalLink
   * @return externalLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalLink() {
    return externalLink;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalLink(String externalLink) {
    this.externalLink = externalLink;
  }


  public ServicesMetadataDto image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImage(String image) {
    this.image = image;
  }


  public ServicesMetadataDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServicesMetadataDto servicesMetadataDto = (ServicesMetadataDto) o;
    return Objects.equals(this.animationUrl, servicesMetadataDto.animationUrl) &&
        Objects.equals(this.attributes, servicesMetadataDto.attributes) &&
        Objects.equals(this.description, servicesMetadataDto.description) &&
        Objects.equals(this.externalLink, servicesMetadataDto.externalLink) &&
        Objects.equals(this.image, servicesMetadataDto.image) &&
        Objects.equals(this.name, servicesMetadataDto.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(animationUrl, attributes, description, externalLink, image, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServicesMetadataDto {\n");
    sb.append("    animationUrl: ").append(toIndentedString(animationUrl)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    externalLink: ").append(toIndentedString(externalLink)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

