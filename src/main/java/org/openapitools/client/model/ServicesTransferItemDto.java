/*
 * Rainbow-API
 * The responses of the open api in swagger focus on the data field rather than the code and the message fields
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServicesTransferItemDto
 */
@JsonPropertyOrder({
  ServicesTransferItemDto.JSON_PROPERTY_AMOUNT,
  ServicesTransferItemDto.JSON_PROPERTY_TOKEN_ID,
  ServicesTransferItemDto.JSON_PROPERTY_TRANSFER_FROM_ADDRESS,
  ServicesTransferItemDto.JSON_PROPERTY_TRANSFER_TO_ADDRESS
})
@JsonTypeName("services.TransferItemDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServicesTransferItemDto {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Integer amount;

  public static final String JSON_PROPERTY_TOKEN_ID = "token_id";
  private String tokenId;

  public static final String JSON_PROPERTY_TRANSFER_FROM_ADDRESS = "transfer_from_address";
  private String transferFromAddress;

  public static final String JSON_PROPERTY_TRANSFER_TO_ADDRESS = "transfer_to_address";
  private String transferToAddress;

  public ServicesTransferItemDto() {
  }

  public ServicesTransferItemDto amount(Integer amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(Integer amount) {
    this.amount = amount;
  }


  public ServicesTransferItemDto tokenId(String tokenId) {
    
    this.tokenId = tokenId;
    return this;
  }

   /**
   * Get tokenId
   * @return tokenId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTokenId() {
    return tokenId;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }


  public ServicesTransferItemDto transferFromAddress(String transferFromAddress) {
    
    this.transferFromAddress = transferFromAddress;
    return this;
  }

   /**
   * Get transferFromAddress
   * @return transferFromAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSFER_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransferFromAddress() {
    return transferFromAddress;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransferFromAddress(String transferFromAddress) {
    this.transferFromAddress = transferFromAddress;
  }


  public ServicesTransferItemDto transferToAddress(String transferToAddress) {
    
    this.transferToAddress = transferToAddress;
    return this;
  }

   /**
   * Get transferToAddress
   * @return transferToAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSFER_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransferToAddress() {
    return transferToAddress;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransferToAddress(String transferToAddress) {
    this.transferToAddress = transferToAddress;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServicesTransferItemDto servicesTransferItemDto = (ServicesTransferItemDto) o;
    return Objects.equals(this.amount, servicesTransferItemDto.amount) &&
        Objects.equals(this.tokenId, servicesTransferItemDto.tokenId) &&
        Objects.equals(this.transferFromAddress, servicesTransferItemDto.transferFromAddress) &&
        Objects.equals(this.transferToAddress, servicesTransferItemDto.transferToAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, tokenId, transferFromAddress, transferToAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServicesTransferItemDto {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    transferFromAddress: ").append(toIndentedString(transferFromAddress)).append("\n");
    sb.append("    transferToAddress: ").append(toIndentedString(transferToAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

